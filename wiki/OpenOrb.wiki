OpenOrb (or OOrb) is an open-source orbit-computation package.

= Introduction =

= Installation =

= Running oorb =

== --task=ephemeris ==

Topocentric ephemerides _without_ uncertainty information for, e.g., Mauna Kea (observatory code 568) for the orbital-element epoch are generated by issuing the command:

 `oorb --task=ephemeris --code=568 --G=GVALUE --orb-in=ORBITFILE`

where `ORBITFILE` (note that use of suffix, either .orb or .des, is mandatory!) contains the orbits in either the OpenOrb format or DES format and `GVALUE` refers to the slope parameter in the H,G system (default=0.15). The default for `--code` is 500, which corresponds to the geocenter. It is also possible to compute ephemerides simultaenously for a range of dates:

 `oorb --task=ephemeris --code=568 --timespan=TIMESPAN --step=STEP --orb-in=ORBITFILE`

Here `TIMESPAN` specifies how many days into the past (`TIMESPAN` < 0 days) or future (`TIMESPAN` > 0 days) you wish to compute ephemerides, and `STEP` specifies the time interval (in days) between ephemerides. The default is to use an integrator for propagations of the orbital elements, but it is also possible to use the analytical two-body approach by making changes to the configuration file.

The ephemerides are written to stdout unless the `--separately` option is specified (in which case every object in the input file gets its own output file).

The output is divided into the following columns (as marked by a single-line header)
  * *Designation* is the designation for the orbit/object as specified in the input file,
  * *Code* is the official observatory code assigned by IAU/MPC, 
  * *MJD UTC/UT1* is the UTC (or UT1 before year 1972) ephemeris date (Modified Julian Date),
  * *Delta*, *RA* and *Dec* are the topocentric equatorial spherical coordinates (AU, deg, deg),
  * *dDelta/dt*, *dRA/dt* and *dDec/dt* are the instantaneous topocentric equatorial spherical sky velocities (for coordinate velocities, divide *dRA/dt* with the cosine of *Dec*) (AU/day, 2 x deg/day),
  * *VMag* is the apparent brightness (mag),
  * *Alt* is the altitude of the object (pure geometric altitude where Earth is assumed spherical) (deg),
  * *Phase* is the phase angle of the object (deg),
  * *LunarElon* is the lunar elongation (angular distance between the Moon and the object) (deg),
  * *LunarAlt* is the lunar altitude (pure geometric altitude where Earth is assumed spherical) (deg),
  * *LunarPhase* is the lunar phase where 0 is new moon and 1 is full moon,
  * *SolarElon* is the solar elongation (angular distance between the Sun and the object) (deg),
  * *SolarAlt* is the altitude of the Sun (pure geometric altitude where Earth is assumed spherical) (deg),
  * *r*, *HLon*, and *HLat* are the heliocentric ecliptic spherical coordinates (AU, deg, deg),
  * *TLon* and *TLat* are the topocentric ecliptic spherical coordinates (2 x deg),
  * *TOCLon* and *TOCLat* are the topocentric opposition-centered ecliptic spherical coordinates (2 x deg), 
  * *HOCLon* and *HOCLat* are the heliocentric opposition-centered ecliptic spherical coordinates (2 x deg), 
  * *TOppLon* and *TOppLat* are the topocentric ecliptic spherical coordinates for the opposition direction (2 x deg), 
  * *HEclObj X Y Z dX/dt dY/dt dZ/dt* are the heliocentric ecliptic cartesian coordinates for the object (3 x AU, 3 x AU/day), and
  * *HEclObsy X Y Z* are the heliocentric ecliptic cartesian coordinates for the observer (3 x AU).


= FAQ =

== Installation ==

=== Which OS + compiler combos seem to work with OpenOrb? ===

  * Mac OS X 10.5.7 + gfortran 4.4.0
  * Mac OS X 10.5.7 + g95 0.91
  * Fedora Core 9 + intel 11.8  

=== Which OS + compiler combos have problems with OpenOrb? ===

  * Mac 10.5.7 + gfortran 4.2.3
  * Fedora Core 9 + gfortran 4.3.0

== Running ==

== Miscellaneous == 